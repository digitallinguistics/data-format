$schema: http://json-schema.org/draft-07/schema
$id:     'https://schemas.digitallinguistics.io/LexicalItem.json'
title:   Lexeme
type:    object

description: "A *lexeme* or *lexical item* in DLx refers to any linguistic sign—that is, a form-meaning pairing or a construction. It is an abstract conceptual entity that represents all the various base forms of a sign and its associated meanings. In DLx, the lexical item might be a word, morpheme, idiom, etc. Examples of lexical items in English might include *be*, *run up* (a phrasal verb), and *‑ing* (a suffix). A lexical item will typically have multiple *senses* or meanings, and those are listed in the `senses` property. It is up to the linguist to decide when two meanings are related, and therefore belong to the same lexical item, or when they belong to different lexical items.\n\nA lexical item often also has multiple base forms, such as suppletive forms, irregular forms, or morphologically-conditioned forms. For example, the lexical item *be* has the base forms *be*, *am*, *is*, etc. These are listed in the `forms` field. The `forms` field should **not** be used to list all the regularly-inflected forms of a word. Individual base forms may have phonologically-conditioned allomorphs, and these are listed in the `allomorphs` field of the form.\n\nThe lexical item and its forms and senses may also have variations, such as dialectal and idiolectal variants, rapid speech variants, register-based variants, variations in meaning, or even spelling variants. These are listed in the `variants` fields.\n\nBy convention, one of the forms of a lexical item is typically chosen as a representative headword or *lemma*, and this is indicated by the `lemma` field. For example, the form *man* in English is typically used as the lemma/headword for the lexical item that includes the forms *man* and *men*. Note that the DLx lexical item does **not** represent a lexical entry in a dictionary. Dictionaries typically list each base form of a lexical item as a separate lexical entry. The DLx lexical item puts each of these lexical entries together in the `forms` field instead."

$defs:
  lemma:
    title:       Lemma
    type:        object
    description: 'Information about a lemma (the form conventionally chosen to represent a lexeme) and how it should be displayed.'
    required:
      - transcription
    properties:
      abstract:
        title:       Abstract
        type:        boolean
        default:     false
        description: 'Whether the lemma is an abstract (underlying) form. User interfaces will typically display abstract forms between |pipes|, /slashes/, {brackets}, or other leading/trailing tokens according to convention in their subfield.'
      reconstructed:
        title:       Reconstructed
        type:        boolean
        default:     false
        description: 'Whether the lemma is a reconstructed (unattested) form. Note that some historically reconstructed forms are also attested in the actual historical record. In this case, you may want to set the value of this property to `false`. User interfaces will typically display reconstructed forms with a leading asterisk, following standard convention in historical linguistics.'
      transcription:
        title:       Transcription
        $ref:        https://schemas.digitallinguistics.io/Transcription.json
        description: 'The transcription of the lemma.'

required:
  - forms
  - lemma
  - senses

dependencies:
  variantType:
    - variantOf

properties:

  type:
    title:    Type
    type:     string
    const:    Lexeme
    readOnly: true
    description: The type of object. Must be set to `Lexeme`.

  id:
    title: ID
    description: A unique database identifier for this Lexeme

  key:
    title:   Lexeme Key
    type:    string
    pattern: '^[^\s]+$'
    description: A human-readable key that uniquely identifies this lexeme or variant within the language. Best practice is for the key to consist of a representation of the lemma form of the word without diacritics, and, if the word is a homonym, the homonym number. However, any value is acceptable as long as it is unique for the language. (Keys do not need to be unique across languages.)

  alternativeAnalyses:
    title: Alternative Analyses
    type: array
    uniqueItems: true
    description: An array of alternative Lexeme objects for this lexeme. This can be useful when working with historical sources or research from other linguists. It allows users to decide on their own analysis, while still maintaining a faithful record of the analyses of the original documentation.
    items:
      title: Alternative Analysis
      type: object
      $ref: 'https://schemas.digitallinguistics.io/Lexeme.json'
      description: A lexeme object representing an alternative analysis of this lexeme.

  bibliography:
    title:       Bibliography
    type:        array
    uniqueItems: true
    description: "A list of citations to attested bibliographic sources where this lexeme appears or is discussed. For precision's sake, it is recommended that sources be listed for specific senses or forms of a lexeme whenever possible."
    items:
      $ref: https://schemas.digitallinguistics.io/Citation.json

  citationForm:
    title: Citation Form
    type:  object
    $ref:  'https://schemas.digitallinguistics.io/Transcription.json'
    description: The citation form of a lexeme is the form given when spoken in isolation, which may be different from its lemma form. For example, in Swahili the citation form of a verb is typically the infinitive, e.g. *kuandika* `to write`, even though *‑andika* is typically used as its lemma form. It may be represented in multiple orthographies. The citation form should include any relevant leading or trailing tokens (e.g. hyphens, equal signs).

  crossReferences:
    title:       Cross References
    type:        array
    uniqueItems: true
    description: 'Cross references to other lexemes. (To cross-reference specific senses, use the `lexicalRelations` property in the Sense instead.)'
    items:
      title:       Cross Reference
      type:        object
      description: 'A cross reference to another lexeme.'
      required:
        - relationType
      properties:

        label:
          title:       Label (for Singular Item)
          $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
          description: 'The label to display before the cross-reference.'

        lemma:
          title:       Lemma
          $ref:        '#/$defs/lemma'
          description: 'The lemma for the referenced lexeme.'

        lexeme:
          title:       'Lexeme (Database Reference: Lexeme)'
          $ref:        https://schemas.digitallinguistics.io/DatabaseReference.json
          description: 'The referenced lexeme. Required for bidirectional and unidirectional cross-references.'

        members:
          title:       Members
          description: 'For enumerated/open sets, specifies the members of the set of lexemes. The current lexeme may also be included in the set. Required for enumerated/open sets. For enumerated sets, `members` must be an object. For open sets, `members` must be an array.'

        plural:
          title:       Label (for Plural Items)
          $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
          description: 'The label to display before the cross-reference if there is more than one item to list. Only applies to enumerated/open sets.'

        relation:
          title:       Relation Name
          $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
          description: 'The name of the cross-reference relation (e.g. "Synonym", "Part/Whole", "Adjective Scale"), as a MultiLangString.'

        relationType:
          title:       Relation Type
          description: 'The type of cross-reference relation. `bidirectional`: Both lexemes cross-reference each other. The cross-reference is displayed on both. `enumerated set`: The lexeme is part of a restricted set of lexemes, where each lexeme fulfills a particular role in the set. For example, scalar adjectives might form an enumerated set of "positive", "comparative", and "superlative". `open set`: The lexeme is part of a set of lexemes. `undirectional`: The current lexeme references another lexeme, but the other lexeme does not reference this lexeme.'
          enum:
            - bidirectional
            - enumerated set
            - open set
            - undirectional

      allOf:
        - if:
            required: [relationType]
            properties:
              relationType:
                enum:
                  - bidirectional
                  - unidirectional
          then:
            required: [lexeme]
        - if:
            required: [relationType]
            properties:
              relationType:
                const: enumerated set
          then:
            required: [members]
            properties:
              members:
                title:       Members (Enumerated Set)
                type:        object
                description: 'An object whose keys indicate the role that a lexeme fills in the set, and whose values provide information about the referenced lexeme. For example, when creating an enumerated set of lexemes for scalar adjectives, the keys in this object might be "positive", "comparative", and "superlative", and the values of each of these would be references to the positive, comparative, and superlative versions of the current lexeme, respectively.'
                additionalProperties:
                  type: object
                  required:
                    - lemma
                    - lexeme
                  properties:
                    lemma:
                      title:       Lemma
                      $ref:        '#/$defs/lemma'
                      description: 'The lemma for the referenced lexeme.'
                    lexeme:
                      title:       Referenced Lexeme
                      $ref:        https://schemas.digitallinguistics.io/DatabaseReference.json
                      description: 'The referenced lexeme.'
        - if:
            required: [relationType]
            properties:
              relationType:
                const: open set
          then:
            required: [members]
            properties:
              members:
                title: Members (Open Set)
                type:  array
                items:
                  type: object
                  required:
                    - lemma
                    - lexeme
                  properties:
                    lemma:
                      title:       Lemma
                      $ref:        '#/$defs/lemma'
                      description: 'The lemma for the referenced lexeme.'
                    lexeme:
                      title:       Referenced Lexeme
                      $ref:        https://schemas.digitallinguistics.io/DatabaseReference.json
                      description: 'The referenced lexeme.'

  dateCreated:
    title: Date Created
    type:  string
    description: The date and optionally time that this lexeme was created
    oneOf:
      - format: date
      - format: date-time

  dateModified:
    title: Date Modified
    type:  string
    description: The date and optionally time that this lexeme was last modified
    oneOf:
      - format: date
      - format: date-time

  examples:
    title:       Examples
    type:        array
    uniqueItems: true
    description: A collection of examples illustrating this lexeme in use. Each example is an Utterance from a Text. The Utterance number should be indicated in the `index` field of the Database Reference object. If using a full Utterance object rather than a Database Reference object, the `key` field should be included. For precision's sake, it is recommended that examples be given for individual senses and forms rather than the entire lexeme when possible.
    items:
      title: Example Utterance (Database Reference)
      type:  object
      $ref:  'https://schemas.digitallinguistics.io/DatabaseReference.json'
      description: A database reference to an Utterance object

  features:
    title: Features
    type:  object
    description: "A set of inflectional features for this lexeme (used primarily with grammatical morphemes). Each property should be the name of a feature type (e.g. `case`, `person`, `number`, `gender`, `nounClass`, etc.), and its value should be the value for that feature, as a string (e.g. `nominative`, `1`, `singular`, `masculine`, etc.). Features may be written more than once, in different languages. For example, a morpheme may have the feature `case: accusative` (English) as well as `caso: acusativo` (Spanish)."
    allOf:
      - title: Tags
        type:  object
        $ref: 'https://schemas.digitallinguistics.io/Tags.json'
        description: The Features object must be a Tags object
      - additionalProperties:
          title:     Feature
          type:      string
          minLength: 1
          description: Individual features must be represented as Strings

  forms:
    title:       Lexeme Base Forms
    type:        array
    uniqueItems: true
    description: "A collection of base forms for this lexeme, i.e. the different forms that this lexeme or morpheme may take, exclusive of its regular inflectional variants. Each base form typically corresponds to a lexical entry in a dictionary. For example: the lexeme *man* would include the forms *man* and *men*; the lexeme *run* would include the forms *run* and *ran*, but not *runs* or *running*, because these are regularly-inflected and therefore predictable; the lexeme *be* would include *am*, *are*, *is*, etc., because these are irregular / suppletive forms, but would not include *being*."
    items:
      title: Lexeme Base Form
      type:  object
      $ref:  'https://schemas.digitallinguistics.io/LexemeForm.json'
      description: One of the base forms of this lexeme

  language:
    title: Language (DatabaseReference)
    type:  object
    $ref:  'https://schemas.digitallinguistics.io/DatabaseReference.json'
    description: The language of this Lexeme. This property is most useful when working with lexical data from multiple languages.

  lemma:
    title:       Lemma
    $ref:        '#/$defs/lemma'
    description: 'A *lemma* is the form of a lexeme conventionally used to represent that lexeme. It is mostly an organizational convenience—a useful way to refer to a lexical item without having to list all its forms every time. The choice of lemma depends on the project, person, language, field of study, etc. It is often (but not always) used as the headword in dictionary entries. Possible choices for the lemma include: the citation form (examples of which might be the infinitive or the third person singular perfective); one of the base forms (often the stem in the singular); the underlying representation; or others. For example, the form *be* is typically used as the lemma form of the English verb forms *am*, *are*, *is*, etc., even though the citation form is typically given in the infinitive as *to be*. The DLx Lemma object contains information about the lemma and how it should be displayed. Lemmas may be represented in multiple orthographies. They should include any relevant leading or trailing tokens (e.g. hyphens, equal signs).'

  lexemeType:
    title: Lexeme Type
    type:  string
    description: 'The type of lexeme this is (either lexical or functional). The primary purpose of this field is to make it easy to style interlinear glosses in small caps.'
    enum:
      - 'functional'
      - 'lexical'

  link:
    title:  Link
    type:   string
    format: uri
    description: A URL where a presentational format for this resource may be viewed

  literalMeaning:
    title: Literal Meaning
    $ref:  'https://schemas.digitallinguistics.io/MultiLangString.json'
    description: The literal meaning of the lexeme, optionally in multiple languages

  media:
    title:       Media
    type:        array
    uniqueItems: true
    description: Media items associated with this lexeme, such as recordings of the citation form of the word, pictures of the item this word refers to, or videos of the action being performed. If a media item pertains a specific sense or form, it should be placed in that sense or form's `media` field instead.
    items:
      title: Media Item (Database Reference)
      type:  object
      $ref:  'https://schemas.digitallinguistics.io/DatabaseReference.json'
      description: A database reference to a media item associated with this lexeme

  morphemeType:
    title: Morpheme Type
    $ref: 'https://schemas.digitallinguistics.io/MultiLangString.json'
    description: 'The morphological type for this lexeme. Example values might include `"root"`, `"stem"`, `"prefix"`, `"suffix"`, `"compound"`, `"phrasal verb"`, etc.'

  notes:
    title:       Notes
    type:        array
    uniqueItems: true
    description: A collection of notes about this lexeme. Each Note object must have its `noteType` property specified. Notes with a note type of `private` are not intended for publication in dictionaries, while other types of notes are. For precision's sake, it is recommended that notes be attached to specific forms or senses whenever possible.
    items:
      allOf:

        - title: Note
          type:  object
          $ref:  'https://schemas.digitallinguistics.io/Note.json'
          description: A note about this lexeme

        - required:
            - noteType
          properties:
            noteType:
              title: Note Type
              type:  string
              description: The type of note about this lexeme
              enum:
                - private
                - general
                - anthropology
                - discourse
                - encyclopedic
                - grammar
                - phonology
                - semantics
                - sociocultural
                - pragmatic

  senses:
    title:       Senses
    type:        array
    minItems:    1
    uniqueItems: true
    description: A collection of meanings or *senses* for this lexeme. It is up to the linguist to decide whether two uses of a lexeme are distinct enough to be considered separate senses.
    items:
      title: Sense
      type:  object
      $ref:  'https://schemas.digitallinguistics.io/Sense.json'
      description: A sense or meaning for this lexeme.

  slot:
    title: Slot
    type:  string
    $ref:  'https://schemas.digitallinguistics.io/Abbreviation.json'
    description: 'This field indicates the slot in a Word Template in which this Lexeme belongs. The value should be the same as the value found in WordTemplate.slots.abbreviation in the corresponding slot.'

  sources:
    title:       Sources
    type:        array
    uniqueItems: true
    description: A list of the initials of the speaker or speakers who are the attested sources for this lexeme. For precision's sake, sources should be listed for specific senses or forms of a lexeme whenever possible. These sources should be DatabaseReferences to a Person object.
    items:
      title:         Source
      type:          object
      $ref:          'https://schemas.digitallinguistics.io/DatabaseReference.json'
      referenceType: Person
      description:   An attested source for this lexeme. This will often be the initials of a speaker.

  status:
    title:       Status
    description: `status` is a reserved keyword, used to describe the status of a lexical item in a workflow. Implementations may include `status` fields with widely different formats and structures, depending on the needs of the software. As such, DLx imposes no requirements on the format of the `status` field. Implementers should ignore data in this field if it does not conform to their specification.

  tags:
    title: Tags
    type:  object
    $ref:  'https://schemas.digitallinguistics.io/Tags.json'
    description: A set of tags for this lexeme

  url:
    title:  URL
    type:   string
    format: uri
    description: A URL where a JSON representation of this lexeme may be retrieved

  variantOf:
    title: Variant Of
    type:  object
    $ref:  'https://schemas.digitallinguistics.io/DatabaseReference.json'
    description: If this lexeme is a variant of another lexeme, this field should contain a reference to the other Lexeme. Lexemes may only be variants of one other Lexeme.

  variants:
    title:       Variants
    type:        array
    uniqueItems: true
    description: A list of variants of this this lexeme. This field should be used for dialectal and idiolectal variants, rapid and careful speech variants, register-based variants, variations in meaning, spelling variants, etc. It should not be used for phonologically-conditioned variants (use the `allomorphs` field of a specific form instead) or morphologically-conditioned variants (use the `forms` field instead). Each variant should have its `variantType` property specified.
    items:
      allOf:

        - title: Variant (Database Reference)
          type:  object
          $ref:  'https://schemas.digitallinguistics.io/DatabaseReference.json'
          description: A database reference to a variant of this lexeme. **Note:** The Database Reference object must have a `variantType` property, indicating the type of variant.

        - required:
            - variantType
          properties:
            variantType:
              title: Variant Type
              $ref:  'https://schemas.digitallinguistics.io/MultiLangString.json'
              description: This field is be used to specify the type of variant. Possible values might be a person’s name (representing an idiolectal variant), or simply `idiolectal`, or `dialectal` (or the name of the dialect), or `rapid speech`, etc. May be in multiple languages.

  variantType:
    title: Variant Type
    $ref:  'https://schemas.digitallinguistics.io/MultiLangString.json'
    description: If this lexeme is a variant of another lexeme or sense, this field can be used to specify the type of variant. Possible values might be a person’s name (representing an idiolectal variant), or simply `idiolectal`, or `dialectal` (or the name of the dialect), or `rapid speech`, etc. Optionally in multiple languages.

examples:
  - alternativeAnalyses:
    - forms:
      - transcription:
          APA: kʼuš
      lemma:
        APA:  kʼuš
        IPA:  kˀuš
      senses:
      - argumentStructure: eat(agent, patient)
        gloss: eat
    bibliography:
      - citationKey: Duralde1802
    citationForm:
      APA:          kʼušti
      IPA:          kˀušti
      Mod:          guxti
      Swad:         gušti
    dateCreated:    '2018-11-03T00:23:55.842Z'
    dateModified:   '2018-11-03T00:24:04.730Z'
    id:             783cbaa8-befe-4049-bfe4-bb5688173780
    key:            guxt-(1)
    language:
      abbreviation: chiti
      id:           3d91a22d-005b-4ec5-8151-09e44629f58f
    lemma:
      APA:          kʼušt
      IPA:          kˀušt
      Mod:          guxt
      Swad:         gušt
    link:           https://explorer.digitallinguistics.io/languages/Chitimacha/lexemes/guxt
    type:           Lexeme
    url:            https://data.digitallinguistics.io/languages/Chitimacha/lexemes/guxt
    forms:
      - allomorphs:
          - environments:
              - _m
            syllableStructure: CVC
            transcription:
              APA:  kʼuš
              IPA:  kˀuš
              Mod:  gux
              Swad: guš
        components:
          - id:            e0e2dbdb-f89b-4002-bd46-4f6803bb4391
            key:           gux
          - id:            797f0f6b-3024-4d0c-bbfc-a1bc7cc48b81
            key:           't1'
        inflectionClass:   main verb
        link:              https://data.digitallinguistics.io/languages/Chitimacha/lexemes/guxt/forms/guxt
        media:
          - id:            24a14428-f2e7-47a8-8d4f-00c4437f6c3a
            filename:      guxt.wav
        morphemeType:      stem
        sources:
          - source: { abbreviation: DWH }
        syllableStructure: CVCC
        transcription:
          APA:  kʼušt
          IPA:  kˀušt
          Mod:  guxt
          Swad: gušt
        variants:
          - id:          0f765e8d-1401-4c01-a88f-3092d077813b
            key:         guxma
            variantType: pluractional
    senses:
      - argumentStructure: eat(agent, patient)
        category:          transitive verb
        definition:        to eat
        gloss:             eat
        link:              https://data.digitallinguistics.io/languages/Chitimacha/lexemes/guxt/senses/2
