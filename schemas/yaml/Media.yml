$schema: 'http://json-schema.org/schema#'
id:      'http://cdn.digitallinguistics.io/schemas/Media-2.0.1.json'
title:   'Media File'
type:    object

description: 'An object containing information about a media file. The file itself should be stored at the URL indicated in the `mediaURL` field. Media files generally contain primary data. Examples might include audio/video recordings, scans of archival materials, photos taken during fieldwork, or scans of field notes.'

required:
  - filename

additionalProperties: true

properties:

  type:
    title: Type
    type:  string
    description: 'The type of object (must be set to `Media`)'
    enum:
      - Media

  abbreviation:
    title: Abbreviation
    type:  string
    $ref:  'http://cdn.digitallinguistics.io/schemas/Abbreviation.json'
    description: 'An abbreviation for referring to this file'

  access:
    title: 'Access Rights'
    type:  object
    $ref:  'http://cdn.digitallinguistics.io/schemas/Access.json'
    description: 'Access rights for this media file'

  content:
    title: Content
    type:  object
    $ref:  'http://cdn.digitallinguistics.io/schemas/MultiLangString.json'
    description: 'A description of the content of this file, optionally in multiple languages or orthographies'

  contentType:
    title: 'MIME Content Type'
    type:  string
    description: 'The media type of the file. Examples: `audio/wav`, `application/pdf`, `video/mpeg`'

  creator:
    title: Creator
    type:  object
    $ref:  'http://cdn.digitallinguistics.io/schemas/Person.json'
    description: 'The person who created this specific file'

  dateCreated:
    title: 'Date Created'
    type:  string
    $ref:  'http://cdn.digitallinguistics.io/schemas/DateCreated.json'
    description: 'The date that this metadata object was originally created. *Not* the date the media file was created. For that, see the `dateRecorded` property.'

  dateModified:
    title: 'Date Modified'
    type:  string
    $ref:  'http://cdn.digitallinguistics.io/schemas/DateModified.json'
    description: 'The date and optionally time that this metadata was last modified. *Not* the date that the media file was modified.'

  dateRecorded:
    title: 'Date Recorded'
    type:  string
    $ref:  'http://cdn.digitallinguistics.io/schemas/DateRecorded.json'
    description: 'The date that this media file was recorded or photographed. Or, if the file is a scan of field notes, the date that the scan was made. *Not* the date that this metadata object was created. For that, see the `dateCreated` property.'

  endTime:
    title: 'End Time'
    type:  number
    description: 'Within an audiovisual file, the time at which the relevant linguistic data ends. Programs may use this field in different ways. For example, if the camera recorded for five minutes after the speaker finished talking, the `End Time` would be the time 5 minutes before the end of the file. The time stamp should be in seconds and milliseconds, separated by a period, e.g. `12.573`, or `1.2`, or `167.78012`, etc.'

  filename:
    title: Filename
    type:  string
    description: 'The filename for this media item without spaces, but including the extension'
    pattern: '^[^ ]+\.[^ ]+'

  fileSize:
    title: 'File Size'
    type:  integer
    description: 'The size of the file, in bytes.'

  format:
    title: 'Format (File Extension)'
    type:  string
    description: 'The format (file extension) of the media file, without a period. Examples: `wav`, `mp4`, `pdf`'

  languages:
    title: Languages
    type:  array
    description: 'An array of the languages that are used in this media file, as abbreviations'
    uniqueItems: true
    items:
      title: 'Language (Abbreviation)'
      type:  string
      $ref:  'http://cdn.digitallinguistics.io/schemas/Abbreviation.json'
      description: 'The abbreviation for this language'

  length:
    title: 'Length (in Time / Pages)'
    type:  number
    description: 'The length of the file, in seconds and milliseconds if an audio/video file (in `SS.MM` format), or pages if a document'

  location:
    title: Location
    type:  object
    $ref:  'http://cdn.digitallinguistics.io/schemas/Location.json'
    description: 'The location where the content in this media file was recorded or produced'

  mediaURL:
    title: 'Media URL'
    type:  string
    $ref:  'http://cdn.digitallinguistics.io/schemas/URL.json'
    description: 'The URL where the media file can be found.'

  notes:
    title: Notes
    type:  array
    description: 'A collection of notes about this media item.'
    uniqueItems: true
    items:
      title: Note
      $ref: 'http://cdn.digitallinguistics.io/schemas/Note.json'

  original:
    title: 'Original Media Item'
    type:  string
    $ref:  'http://cdn.digitallinguistics.io/schemas/URL.json'
    description: 'The URL of the Media object (*not* the URL to the media file itself) that this file is derived from'

  people:
    title: 'Persons in File'
    type:  array
    description: 'A list of all the people who appear in this file. Often a list of speakers.'
    uniqueItems: true
    items:
      title: Person
      $ref: 'http://cdn.digitallinguistics.io/schemas/Person.json'

  startTime:
    title: 'Start Time'
    type:  number
    description: 'Within an audiovisual file, the time at which the relevant linguistic data starts, or the time at which an offset should be calibrated from. This may also be used to synchronize the starting point of multiple media files associated with a single Text. For example, if the camera started recording five minutes before the speaker began speaking, the `Start Time` might be 5 minutes from the start of the file (so 300.00 seconds). The time stamp should be in seconds and milliseconds, separated by a period, e.g. `12.573`, or `1.2`, or `167.78012`, etc.'

  tags:
    title: Tags
    type:  object
    $ref:  'http://cdn.digitallinguistics.io/schemas/Tags.json'
    description: 'A set of tags for this media item'

  url:
    title: URL
    type:  string
    $ref:  'http://cdn.digitallinguistics.io/schemas/URL.json'
    description: 'The URL where this media data can be retrieved. *NOT* the URL of the media file itself (for that, see the `mediaURL` attribute).'
