$schema: http://json-schema.org/draft-07/schema
$id:     https://schemas.digitallinguistics.io/Sense.json
title:   Sense
type:    object

description: A *sense* is one of the possible meanings of a lexical item. For example, the lexeme *run* has many different senses, such as as 'run in a race' and 'run water in a sink'. It is up to the linguist to decide whether two particular uses of a lexeme count as the same sense or different senses.

required:
  - gloss

properties:

  argumentStructure:
    title:       Argument Structure
    type:        string
    description: An abstract representation of the argument structure for this sense.

  baseCategory:
    title:       Base Category
    $ref:        https://schemas.digitallinguistics.io/Category.json
    description: If the current lexeme is an affix or other grammatical morpheme, this field should be used to describe the category that the morpheme attaches to, optionally in multiple languages. If a lexical item can attach to multiple base categories, you should list them as separate senses. This field should generally (but not obligatorily) be used in tandem with the `derivedCategory` property.

  bibliography:
    title:       Bibliography
    type:        array
    uniqueItems: true
    description: A list of citations to attested sources where this sense appears or is discussed.
    items:
      $ref: https://schemas.digitallinguistics.io/Citation.json

  category:
    title:       Lexical Category (Part of Speech, Morphosyntactic Class, etc.)
    $ref:        https://schemas.digitallinguistics.io/Category.json
    description: The lexical category, part of speech, or morphosyntactic class for this Lexeme, optionally in multiple languages. If the current lexeme is an affix or other grammatical morpheme where a `category` property doesn't always make sense, this property may be omitted.

  definition:
    title:       Definition
    $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
    description: The definition for this particular sense.

  derivedCategory:
    title:       Derived Category
    $ref:        https://schemas.digitallinguistics.io/Category.json
    description: If this lexical item is a derivational morpheme, this field indicates the category of the derived form. For example, the English derivational suffix *â€‘er* would have this property set to `noun`, since this suffix derives nouns from verbs.

  examples:
    title:       'Examples (Database References: Utterance)'
    type:        array
    uniqueItems: true
    description: A collection of examples illustrating this sense in use. Examples are formatted as Utterance objects, but do not to be utterances from specific texts (though this is recommended).
    items:
      $ref: https://schemas.digitallinguistics.io/DatabaseReference.json

  gloss:
    title:       Gloss
    $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
    description: A Leipzig-style gloss for this sense.

  lexicalRelations:
    title:       Lexical Relations
    type:        array
    uniqueItems: true
    description: A list of the lexical relations that this sense has to other senses of different lexemes.
    items:
      title:       Lexical Relation
      type:        object
      description: A lexical relation to another sense.
      required:
        - relationType
      properties:

        label:
          title:       Label (for Singular Item)
          $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
          description: The label to display before the lexical relation.

        lexeme:
          title:       'Lexeme (Database Reference: Lexeme)'
          $ref:        https://schemas.digitallinguistics.io/DatabaseReference.json
          description: The referenced lexical item. Required for bidirectional and unidirectional relationships.

        members:
          title:       Members
          description: For enumerated/open sets, specifies the members of the set of lexical items. The current lexical item may also be included in the set. Required for enumerated/open sets. For enumerated sets, `members` must be an object. For open sets, `members` must be an array.

        plural:
          title:       Label (for Plural Items)
          $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
          description: The label to display before the lexical relation if there is more than one item to list. Only applies to enumerated/open sets.

        relation:
          title:       Relation Name
          $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
          description: The name of the lexical relation (e.g. "Synonym", "Hypernym Of", "Part/Whole"), as a MultiLangString.

        relationType:
          title:       Relation Type
          description: 'The type of lexical relation. `bidirectional`: Both senses reference each other. The lexical relation is displayed on both. `enumerated set`: The sense is part of a restricted set of items, where each item fulfills a particular role in the set. For example, polar antonyms may form a set of "positive" vs. "negative". `open set`: The sense is part of a set of items. `undirectional`: The current sense references another sense, but the other sense does not reference this sense.'
          enum:
            - bidirectional
            - enumerated set
            - open set
            - undirectional

      allOf:
        - if:
            required: [relationType]
            properties:
              relationType:
                enum:
                  - bidirectional
                  - unidirectional
          then:
            required: [lexeme]
        - if:
            required: [relationType]
            properties:
              relationType:
                const: enumerated set
          then:
            required: [members]
            properties:
              members:
                title:       'Members (Enumerated Set) (Database References: Sense)'
                type:        object
                description: 'An object whose keys indicate the role that a sense fills in the set, and whose values provide information about the referenced sense. For example, when creating an enumerated set of sense for polar antonyms, the keys in this object might be "positive" and "negative", and the values of each of these would be references to the positive and negative antonyms, respectively.'
                additionalProperties:
                  $ref: https://schemas.digitallinguistics.io/DatabaseReference.json
        - if:
            required: [relationType]
            properties:
              relationType:
                const: open set
          then:
            required: [members]
            properties:
              members:
                title: 'Members (Open Set) (Database References: Sense)'
                type:  array
                items:
                  $ref: https://schemas.digitallinguistics.io/DatabaseReference.json

  link:
    title:       Link
    type:        string
    format:      uri
    description: A URL where a presentational format for this sense may be viewed.

  media:
    title:       'Media (Database References: Media Item)'
    type:        array
    uniqueItems: true
    description: Media items associated with this sense, such as pictures of the item this word refers to, or videos of the action being performed. When a media item pertains to a specific sense, it should be placed in that sense's `media` field rather than the lexeme's.
    items:
      $ref: https://schemas.digitallinguistics.io/DatabaseReference.json

  notes:
    title:       Notes
    type:        array
    uniqueItems: true
    description: A collection of notes about this sense.
    items:
      $ref: https://schemas.digitallinguistics.io/Note.json

  scientificName:
    title:       Scientific Name
    type:        string
    description: The scientific name for this item, in Latin binomial nomenclature.

  semanticClass:
    title:       Semantic Class
    type:        string
    description: The semantic class of this sense. Note that this field is different than the broader Semantic Domains (`semanticDomains`) field. A word may be a member of a semantic domain (for example, "body parts"), but its membership in that domain might have no effect on its morphosyntactic behavior or its semantic interpretation (if for example the grammar of the language does not treat body parts in any special way). The `semanticClass` field should be used when the semantic class of the lexical item conditions the morphosyntactic behavior of other items. It is especially useful when that semantic class is not overtly marked on the form. For example, some languages have noun classes that are lexically specified and that don't always have overt expression on the noun, but which nonetheless condition agreement on verbs or adjectives. If the semantic class of the item conditions its *own* morphosyntactic behavior rather than just the behavior of surrounding items, you may want to use the `inflectionClass` or `category` properties instead of, or in addition to, the `semanticClass` property.

  semanticDomains:
    title:       Semantic Domains
    type:        array
    uniqueItems: true
    description: A list of the semantic domains this sense belongs to. Examples include color, body part, clothing, etc. Each semantic domain is a Category object.
    items:
      $ref: https://schemas.digitallinguistics.io/Category.json

  sources:
    title:       'Sources (Database References: Person)'
    type:        array
    uniqueItems: true
    description: A list of the speakers who are the attested sources for this sense.
    items:
      $ref: https://schemas.digitallinguistics.io/DatabaseReference.json

  tags:
    title:       Tags
    type:        object
    $ref:        https://schemas.digitallinguistics.io/Tags.json
    description: A set of tags for this sense

  type:
    title:       Type
    type:        string
    const:       Sense
    readOnly:    true
    description: The type of object. Must be set to `Sense`.

  usages:
    title:       Usages
    type:        array
    uniqueItems: true
    description: A set of information about the social contexts where this sense is used. Common values might include regions, registers, dialects, or particular social groups. Note that, unlike Forms and Lexemes, Senses do not have `variants` of `variantOf` fields. Information of this type should be captured by the `usages` field instead. For example, some American English speakers use the word *coke* as a generic term for a carbonated drink, while others use it only as the specific name of a product. Rather than listing one sense as a variant of another (thereby privileging one meaning as primary), specify additional usage information for one or both senses indicating who uses that sense and in what situations.
    items:
      $ref: https://schemas.digitallinguistics.io/Category.json

examples:

  - argumentStructure: eat(agent, patient)
    category:
      abbreviation:
        eng: v tr
      name:
        eng: transitive verb
    definition:        to eat
    gloss:             eat
    link:              https://data.digitallinguistics.io/languages/Chitimacha/lexemes/guxt/senses/2

  - bibliography:
      - citationKey: Duralde1802
    category:
      abbreviation:
        eng: v
      name:
        eng: verb
    definition: A suffix that derives transitive verbs from intransitive verbs
    derives:    verb
    gloss:      TR
    link:       https://data.digitallinguistics.io/languages/Chitimacha/lexemes/t1/senses/1
    sources:
      - abbreviation: DP

  - category:
      abbreviation:
        eng: noun
      name:
        eng: noun
    definition: a male
    gloss:      male
    semanticDomains:
      - name:
          eng: human
    usages:
      - name:
          eng: formal
    media:
      - id:       b032fe58-0deb-44fc-8001-e3ba63145417
        filename: qasi-2.jpg
