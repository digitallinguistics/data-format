$schema: http://json-schema.org/draft-07/schema
$id:     https://schemas.digitallinguistics.io/Sense.json
title:   Sense
type:    object

description: A *sense* is one of the possible meanings of a lexical item. For example, the lexeme *run* has many different senses, such as as 'run in a race' and 'run water in a sink'. It is up to the linguist to decide whether two particular uses of a lexeme count as the same sense or different senses.

required:
  - gloss

properties:

  argumentStructure:
    title:       Argument Structure
    type:        string
    description: An abstract representation of the argument structure for this sense.

  baseCategory:
    title:       Base Category
    $ref:        https://schemas.digitallinguistics.io/Category.json
    description: If the current lexeme is an affix or other grammatical morpheme, this field should be used to describe the category that the morpheme attaches to, optionally in multiple languages. If a lexical item can attach to multiple base categories, you should list them as separate senses. This field should generally (but not obligatorily) be used in tandem with the `derivedCategory` property.

  bibliography:
    title:       Bibliography
    type:        array
    uniqueItems: true
    description: A list of citations to attested sources where this sense appears or is discussed.
    items:
      $ref: https://schemas.digitallinguistics.io/Citation.json

  category:
    title:       Lexical Category (Part of Speech, Morphosyntactic Class, etc.)
    $ref:        https://schemas.digitallinguistics.io/Category.json
    description: The lexical category, part of speech, or morphosyntactic class for this Lexeme, optionally in multiple languages. If the current lexeme is an affix or other grammatical morpheme where a `category` property doesn't always make sense, this property may be omitted.

  definition:
    title:       Definition
    $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
    description: The definition for this particular sense.

  derivedCategory:
    title:       Derived Category
    $ref:        https://schemas.digitallinguistics.io/Category.json
    description: If this lexical item is a derivational morpheme, this field indicates the category of the derived form. For example, the English derivational suffix *â€‘er* would have this property set to `noun`, since this suffix derives nouns from verbs.

  examples:
    title:       'Examples (Database References: Utterance)'
    type:        array
    uniqueItems: true
    description: A collection of examples illustrating this sense in use. Examples are formatted as Utterance objects, but do not to be utterances from specific texts (though this is recommended).
    items:
      $ref: https://schemas.digitallinguistics.io/DatabaseReference.json

  gloss:
    title:       Gloss
    $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
    description: A Leipzig-style gloss for this sense.

  lexicalRelations:
    title:       Lexical Relations
    type:        array
    uniqueItems: true
    description: A list of the lexical relations that this sense has to other senses of different lexemes.
    items:
      title:       Lexical Relation
      type:        object
      description: A lexical relation to another sense.
      required:
        - relationType
      properties:

        label:
          title:       Label (for Singular Item)
          $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
          description: The label to display before the lexical relation.

        lexeme:
          title:       'Lexeme (Database Reference: Lexeme)'
          $ref:        https://schemas.digitallinguistics.io/DatabaseReference.json
          description: The referenced lexical item. Required for bidirectional and unidirectional relationships.

        members:
          title:       Members
          description: For enumerated/open sets, specifies the members of the set of lexical items. The current lexical item may also be included in the set. Required for enumerated/open sets. For enumerated sets, `members` must be an object. For open sets, `members` must be an array.

        plural:
          title:       Label (for Plural Items)
          $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
          description: The label to display before the lexical relation if there is more than one item to list. Only applies to enumerated/open sets.

        relation:
          title:       Relation Name
          $ref:        https://schemas.digitallinguistics.io/MultiLangString.json
          description: The name of the lexical relation (e.g. "Synonym", "Hypernym Of", "Part/Whole"), as a MultiLangString.

        relationType:
          title:       Relation Type
          description: 'The type of lexical relation. `bidirectional`: Both senses reference each other. The lexical relation is displayed on both. `enumerated set`: The sense is part of a restricted set of items, where each item fulfills a particular role in the set. For example, polar antonyms may form a set of "positive" vs. "negative". `open set`: The sense is part of a set of items. `undirectional`: The current sense references another sense, but the other sense does not reference this sense.'
          enum:
            - bidirectional
            - enumerated set
            - open set
            - undirectional

      allOf:
        - if:
            required: [relationType]
            properties:
              relationType:
                enum:
                  - bidirectional
                  - unidirectional
          then:
            required: [lexeme]
        - if:
            required: [relationType]
            properties:
              relationType:
                const: enumerated set
          then:
            required: [members]
            properties:
              members:
                title:       'Members (Enumerated Set) (Database References: Sense)'
                type:        object
                description: 'An object whose keys indicate the role that a sense fills in the set, and whose values provide information about the referenced sense. For example, when creating an enumerated set of sense for polar antonyms, the keys in this object might be "positive" and "negative", and the values of each of these would be references to the positive and negative antonyms, respectively.'
                additionalProperties:
                  $ref: https://schemas.digitallinguistics.io/DatabaseReference.json
        - if:
            required: [relationType]
            properties:
              relationType:
                const: open set
          then:
            required: [members]
            properties:
              members:
                title: 'Members (Open Set) (Database References: Sense)'
                type:  array
                items:
                  $ref: https://schemas.digitallinguistics.io/DatabaseReference.json

  type:
    title:       Type
    type:        string
    const:       Sense
    readOnly:    true
    description: The type of object. Must be set to `Sense`.

#   link:
#     title:  Link
#     type:   string
#     format: uri
#     description: A URL where a presentational format for this sense may be viewed

#   media:
#     title:       Media
#     type:        array
#     uniqueItems: true
#     description: Media items associated with this sense, such as pictures of the item this word refers to, or videos of the action being performed. When a media item pertains to a specific sense, it should be placed in that sense's `media` field rather than the lexeme's.
#     items:
#       title: Media Item (Database Reference)
#       type:  object
#       $ref:  'https://schemas.digitallinguistics.io/DatabaseReference.json'
#       description: A database reference to a media item associated with this sense

#   notes:
#     title:       Notes
#     type:        array
#     uniqueItems: true
#     description: A collection of notes about this sense. Each Note object must have its `noteType` property specified. Notes with a note type of `private` are not intended for publication in dictionaries, while other types of notes are. For precision's sake, it is recommended that notes be attached to specific senses instead of the lexeme whenever possible.
#     items:
#       allOf:

#         - title: Note
#           type:  object
#           $ref:  'https://schemas.digitallinguistics.io/Note.json'
#           description: A note about this sense

#         - required:
#             - noteType
#           properties:
#             noteType:
#               title: Note Type
#               type:  string
#               description: The type of note about this sense
#               enum:
#                 - private
#                 - general
#                 - anthropology
#                 - discourse
#                 - encyclopedic
#                 - grammar
#                 - phonology
#                 - semantics
#                 - sociocultural

#   scientificName:
#     title: Scientific Name
#     type:  string
#     description: The scientific name for this item

#   semanticClass:
#     title: Semantic Class
#     type:  string
#     description: The semantic class that this lexeme falls into. Common uses might be `animate`, `standing`, etc. This field is especially useful when the semantic class of a word conditions agreement on some other word (for example, if different semantic categories of nouns trigger different types of verbal agreement). If this class affects the morphosyntactic behavior of the item, use the Sense.category property instead. The semanticClass property is for purely semantic classification. Note that the semanticClass field is different from the semanticDomains field. A word may be a member of a semantic domain (for example, "body parts"), but its membership in that domain might have no effect on its morphosyntactic behavior or its semantic interpretation (if for example the grammar of the language does not treat body parts in any special way).

#   semanticDomains:
#     title:       Semantic Domains
#     type:        array
#     uniqueItems: true
#     description: A list of the semantic domains this sense belongs to. Examples include color, body part, clothing, etc. The colon character can be used to represent subdomains e.g. quality:color:primary, color:red, etc.
#     items:
#       title:       Semantic Domain
#       $ref:        'https://schemas.digitallinguistics.io/MultiLangString.json'
#       description: A domain that this sense belongs to, as a MultiLangString

#   sources:
#     title:       Sources
#     type:        array
#     uniqueItems: true
#     description: A list of the initials of the speaker or speakers who are the attested sources for this sense. For precision's sake, sources should be listed for specific senses of a lexeme rather than the lexeme whenever possible. These sources should be DatabaseReferences to a Person object.
#     items:
#       title:     Source
#       type:      object
#       $ref:      'https://schemas.digitallinguistics.io/DatabaseReference.json'
#       referenceType: Person
#       description: An attested source for this sense. This will often be the initials of a speaker.

#   tags:
#     title: Tags
#     type:  object
#     $ref:  'https://schemas.digitallinguistics.io/Tags.json'
#     description: A set of tags for this sense

#   usages:
#     title:       Usages
#     type:        array
#     uniqueItems: true
#     description: A list of MultiLangStrings giving information about this sense's social usage, regional information, register, dialect, and/or connotations. Common values might be "archaic", "colloquial", "formal", "positive", "negative", etc.
#     items:
#       title:       Usage
#       $ref:        'https://schemas.digitallinguistics.io/MultiLangString.json'
#       description: A MultiLangString giving information about this sense's usage

#   variantOf:
#     title: Variant Of
#     type:  object
#     $ref:  'https://schemas.digitallinguistics.io/DatabaseReference.json'
#     description: If this sense is a variant of another sense, a reference to the other sense should go here. For example, sometimes two speakers may use the same word with a slightly different set of senses. In American English, for instance, *Coke* is a specific brand of soda for most speakers, but a generic term for soda for other speakers. The generic sense would therefore be listed as a dialectal variant of the specific sense.

#   variants:
#     title:       Variants
#     type:        array
#     uniqueItems: true
#     description: A list of variations of this this sense. This field should be used for dialectal and idiolectal variants, register-based variants, variations in meaning, spelling variants, etc. Each variant should have its `variantType` property specified.
#     items:
#       allOf:

#         - title: Variant (Database Reference)
#           type:  object
#           $ref:  'https://schemas.digitallinguistics.io/DatabaseReference.json'
#           description: A database reference to a variant of this sense. **Note:** The Database Reference object must have a `variantType` property, indicating the type of variant.

#         - required:
#             - variantType
#           properties:
#             variantType:
#               title: Variant Type
#               $ref:  'https://schemas.digitallinguistics.io/MultiLangString.json'
#               description: This field is be used to specify the type of variant. Possible values might be a personâ€™s name (representing an idiolectal variant), or simply `idiolectal`, or `dialectal` (or the name of the dialect), etc. May be in multiple languages.

#   variantType:
#     title: Variant Type
#     $ref:  'https://schemas.digitallinguistics.io/MultiLangString.json'
#     description: If this sense is a variant of another sense, this field can be used to specify the type of variant. Possible values might be a personâ€™s name (representing an idiolectal variant), or simply `idiolectal`, or `dialectal` (or the name of the dialect), etc. May be in multiple languages.

# examples:

#   - argumentStructure: eat(agent, patient)
#     category:          transitive verb
#     definition:        to eat
#     gloss:             eat
#     link:              https://data.digitallinguistics.io/languages/Chitimacha/lexemes/guxt/senses/2

#   - bibliography:
#       - citationKey: Duralde1802
#     category:   verb
#     definition: A suffix that derives transitive verbs from intransitive verbs
#     derives:    verb
#     gloss:      TR
#     link:       https://data.digitallinguistics.io/languages/Chitimacha/lexemes/t1/senses/1
#     sources:
#       - abbreviation: DP

#   - category:   noun
#     definition: a male
#     gloss:      male
#     semanticDomains:
#       - human
#     usages:
#       - formal
#     media:
#       - id:       b032fe58-0deb-44fc-8001-e3ba63145417
#         filename: qasi-2.jpg
